The array-form of an integer num is an array representing its digits in left to right order.

For example, for num = 1321, the array form is [1,3,2,1].
Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.

 

Example 1:

Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234
Example 2:

Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455
Example 3:

Input: num = [2,1,5], k = 806
Output: [1,0,2,1]
Explanation: 215 + 806 = 1021
 

Constraints:

1 <= num.length <= 104
0 <= num[i] <= 9
num does not contain any leading zeros except for the zero itself.
1 <= k <= 104

/*------------------------Solotion 1------------------------*/
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution
{
public:
    vector<int> addToArrayForm(vector<int> &num, int k)
    {
        long long numInt = 0;
        for (int n : num)
        {
            numInt = numInt * 10 + n;
        }
        numInt += k;

        vector<int> result;

        if (numInt == 0)
        {
            result.push_back(0);
        }
        else
        {
            while (numInt > 0)
            {
                result.push_back(numInt % 10);
                numInt /= 10;
            }
            reverse(result.begin(), result.end());
        }
        return result;
    }
};

int main()
{
    Solution s1;
    vector<int> num = {2, 1, 5};
    int k = 806;

    vector<int> result = s1.addToArrayForm(num, k);

    for (int n : result)
    {
        cout << n;
    }

    return 0;
}

Runtime Error
Line 9: Char 29: runtime error: signed integer overflow: 999999999 * 10 cannot be represented in type 'int' (solution.cpp)
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior solution.cpp:9:29